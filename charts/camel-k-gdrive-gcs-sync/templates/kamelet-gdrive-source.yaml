apiVersion: camel.apache.org/v1alpha1
kind: Kamelet
metadata:
  name: user-gdrive-source
  namespace: {{ .Values.camelK.watchNamespace }}
  labels:
    app: {{ .Release.Name }}
    integration: gdrivegcs
spec:
  definition:
    title: "User Google Drive Source"
    description: "Pull files from Google Drive using user OAuth tokens"
    required:
      - accessToken
      - refreshToken
    properties:
      accessToken:
        title: Access Token
        description: OAuth access token for Google Drive
        type: string
      refreshToken:
        title: Refresh Token
        description: OAuth refresh token for Google Drive
        type: string
      allowedExtensions:
        title: Allowed File Extensions
        description: Comma-separated list of file extensions to filter
        type: string
  template:
    from:
      uri: "google-drive:files/list"
      parameters:
        accessToken: "{{`{{accessToken}}`}}"
        refreshToken: "{{`{{refreshToken}}`}}"
        applicationName: "CamelK-GDrive-GCS-Sync"
      steps:
        - log:
            message: "Processing files from Google Drive for user"
        # Filter by file extensions if specified
        - choice:
            when:
              - simple: "{{`{{allowedExtensions}}`}} != ''"
              - split:
                  tokenize: ","
                  expression:
                    constant: "{{`{{allowedExtensions}}`}}"
                steps:
                  - setHeader:
                      name: "extension"
                      simple: "${body.trim()}"
                  - filter:
                      expression:
                        simple: "${exchangeProperty.CamelSplitSize} == ${exchangeProperty.CamelSplitIndex} + 1"
                  - log:
                      message: "Filtering for extensions: {{`{{allowedExtensions}}`}}"
        # Iterate through each file
        - split:
            simple: "${body}"
            steps:
              # Download the file content
              - setHeader:
                  name: "fileId"
                  simple: "${body.id}"
              - setHeader:
                  name: "fileName"
                  simple: "${body.name}"
              # Filter by extension if needed
              - choice:
                  when:
                    - simple: "{{`{{allowedExtensions}}`}} != ''"
                    - script:
                        language: groovy
                        expression: |
                          def fileName = exchange.in.getHeader("fileName")
                          def allowedExtensions = exchange.in.getHeader("AllowedExtensions")

                          if (allowedExtensions == null || allowedExtensions.isEmpty()) {
                            return true // No extension filtering
                          }

                          def extensions = allowedExtensions.split(",")
                          for (ext in extensions) {
                            ext = ext.trim()
                            if (ext.startsWith(".")) {
                              if (fileName.toLowerCase().endsWith(ext.toLowerCase())) {
                                return true
                              }
                            } else {
                              if (fileName.toLowerCase().endsWith("." + ext.toLowerCase())) {
                                return true
                              }
                            }
                          }
                          return false
              # Download file content
              - to: "google-drive:files/get?fileId=${header.fileId}&accessToken={{`{{accessToken}}`}}&refreshToken={{`{{refreshToken}}`}}"
              # Send to GCS sink
              - to: "kamelet:user-gcs-sink?bucketName=${header.bucketName}&credentialsPath=${header.credentialsPath}&userFolder=${header.userFolder}"
