metadata:
  slug: hello-go
  name: Hello Go
  description: A Hello World application written in the Go language. No input parameters.
  logoUrlDark: "https://nh-addons.s3.us-east-1.amazonaws.com/hello-go/logo.png"
  logoUrlLight: "https://nh-addons.s3.us-east-1.amazonaws.com/hello-go/logo.png"
  detailUrl: "https://addons.kaops.net/hello-go/"
  externalUrl: "https://github.com/golang-samples/gopher-vector?tab=readme-ov-file"
  installTargets:
    clusterMessage: Enter cluster restrictions and requirements here. Must be installed on clusters configured for Ingress.
    infoMessage: Info message
    warningMessage: The Frontend UX displays this text as an warning message in the cluster Addon config dialog.

forms:
  - slug: default
    label: Configuration
    steps:
      - slug: details
        isCreateOnly: true
        variableSlugs:
          - ssoEnabled
          - gpuEnabled
          - modelsToPull
        ui:
          label: Details
      - slug: postInstall
        isCreateOnly: true
        variableSlugs:
          - postInstallOptions
          - postInstallGroupsSuggested
          - postInstallKnowledgeBasesSuggested
        ui:
          label: Options
      - slug: groups
        isCreateOnly: true
        variableSlugs:
          - postInstallGroupsCustom
        ui:
          if: "$get(postInstallOptions).value == 'custom'"
          label: Groups
      - slug: knowledge
        isCreateOnly: true
        variableSlugs:
          - postInstallKnowledgeBasesCustom
        ui:
          if: "$get(postInstallOptions).value == 'custom'"
          label: Knowledge
  - slug: defaultUpdate
    label: Configuration
variables:
  - slug: ssoEnabled
    path: ingress.oauth2Proxy.enabled
    forms: [default, defaultUpdate]
    ui:
      type: toggle
      label: Use Single Sign On
      value: false
  - slug: gpuEnabled
    path: open-webui.ollama.ollama.gpu.enabled
    forms: [default]
    ui:
      type: toggle
      label: Use GPU
      help: Install the oAuth2 Proxy Addon to use SSO.
      value: false
  - slug: modelsToPull
    path: open-webui.ollama.ollama.models.pull
    forms: [default]
    ui:
      type: transferlist
      label: Select LLM Models to Pull
      sourceLabel: LLM Models
      options: [gemma2, gemma3:1b, gemma3:4b, llama3.1:8b, llama3.2:3b]
      help: "Models to pull from: https://ollama.com/search"
      searchable: true
  - slug: postInstallOptions
    path: postInstall.chosenPostInstallOptions
    forms: [default]
    ui:
      el: div
      children:
        - el: p
          children: Use groups control access to knowledge, prompts, models and other protected areas of the system. Knowledge bases are containers of information and data use by the models. You may choose from our suggestions below, or select `Custom` to define your own.
        - label: Groups and Knowledge bases
          type: radio
          id: postInstallOptions
          name: chosenPostInstallOptions
          options:
            - label: Suggested
              value: suggested
            - label: Custom
              value: custom
            - label: I'll do this later
              value: none
          value: suggested
          help: All settings here may be changed inside the addon.
  - slug: postInstallGroupsSuggested
    path: postInstall.groups
    forms: [default]
    ui:
      el: div
      children:
        - if: "$get(postInstallOptions).value == 'suggested'"
          type: checkbox
          name: groups
          id: postInstallGroupsSuggested
          options:
            - label: Engineering Team
              value:
                name: Engineering Team
                description: A group for software engineers
              help: A group for software engineers
            - label: Product Management
              value:
                name: Product Management
                description: A group for product managers
              help: A group for product managers
            - label: Marketing Team
              value:
                name: Marketing Team
                description: A group for marketing professionals
              help: A group for marketing professionals
            - label: Customer Support
              value:
                name: Customer Support
                description: A group for customer support representatives
              help: A group for customer support representatives
          value:
            - name: Engineering Team
              description: A group for software engineers
            - name: Product Management
              description: A group for product managers
            - name: Marketing Team
              description: A group for marketing professionals
            - name: Customer Support
              description: A group for customer support representatives
        - if: "$get(postInstallOptions).value == 'custom'"
          el: div
          children: You prefer to define a few of your own groups and knowledge bases in the following steps.
  - slug: postInstallGroupsCustom
    path: postInstall.groups
    forms: [default]
    ui:
      type: repeater
      label: Groups
      id: postInstallGroupsCustom
      addButton: false
      insertControl: true
      upControl: false
      downControl: false
      min: 1
      help: The installation process will automatically create these groups. You can change the names & details anytime inside the application itself.
      children:
        - label: Name
          type: text
          name: name
          value: ''
          validation: required
        - label: Description
          type: text
          name: description
          value: ''
          validation: required
  - slug: postInstallKnowledgeBasesSuggested
    path: postInstall.knowledgeBases
    isStatic: true
    forms: [default]
    ui:
      if: "$get(postInstallOptions).value == 'suggested'"
      type: list
      children:
        - if: "$u.find($get(postInstallGroupsSuggested).value, $u.matchesProperty('name', 'Engineering Team'))"
          type: group
          children:
            - type: hidden
              name: name
              value: Best Practices for Code Reviews
            - type: hidden
              name: description
              value: This guide outlines the key steps for effective code reviews.
            - type: list
              name: groups
              children:
                - type: hidden
                  value: Engineering Team
        - if: "$u.find($get(postInstallGroupsSuggested).value, $u.matchesProperty('name', 'Marketing Team'))"
          type: group
          children:
            - type: hidden
              name: name
              value: Social Media Strategy For This Year
            - type: hidden
              name: description
              value: An overview of our social media approach for the upcoming year.
            - type: list
              name: groups
              children:
                - type: hidden
                  value: Marketing Team
        - if: "$u.find($get(postInstallGroupsSuggested).value, $u.matchesProperty('name', 'Product Management'))"
          type: group
          children:
            - type: hidden
              name: name
              value: Agile Project Management Tips
            - type: hidden
              name: description
              value: Key insights for managing agile projects effectively.
            - type: list
              name: groups
              children:
                - type: hidden
                  value: Product Management
        - if: "$u.find($get(postInstallGroupsSuggested).value, $u.matchesProperty('name', 'Customer Support'))"
          type: group
          children:
            - type: hidden
              name: name
              value: Handling Difficult Customers
            - type: hidden
              name: description
              value: Techniques and strategies for resolving challenging customer situations.
            - type: list
              name: groups
              children:
                - type: hidden
                  value: Customer Support
  - slug: postInstallKnowledgeBasesCustom
    path: postInstall.knowledgeBases
    forms: [default]
    ui:
      type: repeater
      label: Knowledge Bases
      #      key: "$: 'knowledgeBases-' + $get(postInstallGroupsCustom).value.length"
      addButton: false
      insertControl: true
      upControl: false
      downControl: false
      min: 1
      help: The installation process will automatically create these knowledge bases. You can change the names & details anytime inside the application itself.
      children:
        - label: Name
          type: text
          name: name
          help: What are you working on?
          value: ''
          validation: required
        - label: Description
          type: text
          name: description
          help: What are you trying to achieve?
          value: ''
          validation: required
        - label: Groups
          type: taglist
          name: groups
          key: "$: 'knowledgeBaseGroups-' $index + '-' + $get(postInstallGroupsCustom).value.length"
          options: "$u.map($get(postInstallGroupsCustom).value, 'name')"
          disableDragAndDrop: true
          popover: true
          openOnClick: true
          closeOnSelect: false
          help: Select groups with write access to this knowledge base
          value: []
#      value: [{ name: '', description: '', groups: [] }]

system:
  - path: open-webui.ingress.host
    value: 'chat.${system.hubCluster.ingressHostname}'

output:
  - name: Open Web UI URL
    description: The URL to access Open WebUI
    value: "https://chat.${system.hubCluster.ingressHostname}"
    type: url
    slug: default

# old junk below
#forms:
#  - slug: default
#    label: Hello world app
#    steps:
#      - slug: one
#        variableSlugs:
#          - hello
#        ui:
#          label: One
#      - slug: two
#        variableSlugs:
#          - item1
#        ui:
#          label: Two
#        isCreateOnly: true
#  - slug: foo
#    label: Foo Form
#    caption: A form caption
#    isFormOption: true
#  - slug: bar
#    label: Bar Form
#  - slug: baz
#    label: Baz Form
#    isFormOption: true
#    isCreateOnly: true
#
#variables:
#  - slug: hello
#    path: hello
#    forms: [default]
#    ui:
#      type: text
#      label: Hello
#  - slug: bye
#    path: bye
#    forms: [foo]
#    ui:
#      type: text
#      label: Bye Foo
#  - slug: bazzercise
#    path: bazzercise
#    forms: [baz]
#    ui:
#      type: text
#      label: Baz!
#  - slug: item1
#    path: item1
#    forms: [default]
#    ui:
#      type: radio
#      label: Show item 2?
#      options:
#        - label: Yes
#          value: true
#        - label: No
#          value: false
#      value: true
#  - slug: item2
#    path: item2
#    forms: [default]
#    ui:
#      if: $get(item1).value
#      type: text
#      label: Item 2

