open-webui:
  image:
    repository: nethopper/kaops-open-webui
    tag: git-d3fb5d3
    pullPolicy: Always
  ollama:
    ollama:
      gpu:
        enabled: false
      models:
        pull: []
    service:
      type: ClusterIP
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/backend-protocol: http
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/auth-signin:
      nginx.ingress.kubernetes.io/auth-url:
      nginx.ingress.kubernetes.io/auth-response-headers: "authorization"
    host:
    tls: true
    existingSecret: "webui-tls"
  extraEnvVars:
    - name: WEBUI_NAME
      value: "Private AI"
    - name: ENABLE_CODE_EXECUTION
      value: "false"
    - name: ENABLE_CODE_INTERPRETER
      value: "false"
    - name: ENABLE_GOOGLE_DRIVE_INTEGRATION
      value: "true"
    - name: ENABLE_ONEDRIVE_INTEGRATION
      value: "true"
    - name: BYPASS_EMBEDDING_AND_RETRIEVAL
      value: "true"
    - name: WEBUI_AUTH
      value: "false"

oauth2-proxy:
  config:
    clientID:
    clientSecret:
    cookieSecret:
    configFile:
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/backend-protocol: http
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/tls-acme: "true"
    host:
    existingSecret: "oauth-tls"
    tls:
      - hosts:
        secretName:
  service:
    portNumber: 4180
